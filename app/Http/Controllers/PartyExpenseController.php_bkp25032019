<?php namespace App\Http\Controllers;

	//use Session;
	//use Request;
	use DB;
	use CRUDBooster;
	use Carbon\Carbon;
	use Illuminate\Http\Request;
	use Illuminate\Support\Facades\Validator;
	use Illuminate\Support\Facades\Input;
	use Illuminate\Support\Facades\Redirect;
	use Illuminate\Support\Facades\Session;
	use App\PartyTransactionRegister;
	use App\PartySchedule1;
	use App\PartySchedule2;
	use App\PartySchedule3;
	use App\PartySchedule4;
	use App\PartySchedule5;
	use App\PartySchedule6;	
	use App\PartySchedule7;
	use App\PartySchedule8;
	use App\PartySchedule9;
	use App\PartySchedule10;
	use App\PartySchedule11;
	use App\PartySchedule12;
	use App\PartySchedule13;
	use App\PartySchedule14;
	use App\PartySchedule15;
	use App\PartySchedule16;	
	use App\PartySchedule17;
	use App\PartySchedule18;
	use App\PartySchedule19;	
	use App\PartySchedule20;
	use App\PartySchedule21;
	use App\PartySchedule22;
	use App\UserStates;
	use PDF;
	use Helper;

	class PartyExpenseController extends \crocodicstudio\crudbooster\controllers\CBController {

	    public function cbInit() {

			# START CONFIGURATION DO NOT REMOVE THIS LINE
			$this->title_field = "tran_source_name";
			$this->limit = "20";
			$this->orderby = "id,desc";
			$this->global_privilege = true;
			$this->button_table_action = true;
			$this->button_bulk_action = true;
			$this->button_action_style = "button_icon";
			$this->button_add = true;
			$this->button_edit = true;
			$this->button_delete = true;
			$this->button_detail = true;
			$this->button_show = true;
			$this->button_filter = true;
			$this->button_import = false;
			$this->button_export = false;
			$this->table = "party_transaction_register";
			# END CONFIGURATION DO NOT REMOVE THIS LINE

			# START COLUMNS DO NOT REMOVE THIS LINE
			$this->col = [];
			$this->col[] = ["label"=>"Tran Date","name"=>"tran_date"];
			$this->col[] = ["label"=>"Tran Amount","name"=>"tran_amount"];
			$this->col[] = ["label"=>"Tran Source","name"=>"tran_source"];
			# END COLUMNS DO NOT REMOVE THIS LINE

			# START FORM DO NOT REMOVE THIS LINE
			$this->form = [];
			//$this->form[] = ['label'=>'User Id','name'=>'user_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'users,id'];
			//$this->form[] = ['label'=>'Election Id','name'=>'election_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'elections,id'];
			//$this->form[] = ['label'=>'Bank Register Id','name'=>'bank_register_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'bank_register,tran_source_name'];
			//$this->form[] = ['label'=>'Trans Parent Id','name'=>'trans_parent_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'trans_parent,id'];
			$this->form[] = ['label'=>'Tran Date','name'=>'tran_date','type'=>'datetime','validation'=>'required|date_format:Y-m-d H:i:s','width'=>'col-sm-10'];
			$this->form[] = ['label'=>'Tran Amount','name'=>'tran_amount','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Source','name'=>'tran_source','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Source Name','name'=>'tran_source_name','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Source Address','name'=>'tran_source_address','type'=>'textarea','validation'=>'required|string|min:5|max:5000','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Receipt No','name'=>'receipt_no','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Purpose','name'=>'tran_purpose','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Purpose Other','name'=>'tran_purpose_other','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Deposited Same Day','name'=>'deposited_same_day','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Method','name'=>'tran_method','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Bank Deposited','name'=>'bank_deposited','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Is Own Bank','name'=>'is_own_bank','type'=>'radio','validation'=>'required|integer','width'=>'col-sm-10','dataenum'=>'Array'];
			//$this->form[] = ['label'=>'Tran Source Bank Name','name'=>'tran_source_bank_name','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Source Bank Branch','name'=>'tran_source_bank_branch','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Remarks','name'=>'tran_remarks','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Type','name'=>'tran_type','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Description','name'=>'tran_description','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Quantity','name'=>'tran_quantity','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Rate','name'=>'tran_rate','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Receiver Id','name'=>'tran_receiver_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'tran_receiver,id'];
			//$this->form[] = ['label'=>'Tran Receiver Name','name'=>'tran_receiver_name','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Receiver Address','name'=>'tran_receiver_address','type'=>'textarea','validation'=>'required|string|min:5|max:5000','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tag Schedule','name'=>'tag_schedule','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Bank Consolidated','name'=>'bank_consolidated','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			# END FORM DO NOT REMOVE THIS LINE

			# OLD START FORM
			//$this->form = [];
			//$this->form[] = ['label'=>'User Id','name'=>'user_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'user,id'];
			//$this->form[] = ['label'=>'Election Id','name'=>'election_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'election,id'];
			//$this->form[] = ['label'=>'Bank Register Id','name'=>'bank_register_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'bank_register,tran_source_name'];
			//$this->form[] = ['label'=>'Trans Parent Id','name'=>'trans_parent_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'trans_parent,id'];
			//$this->form[] = ['label'=>'Tran Date','name'=>'tran_date','type'=>'datetime','validation'=>'required|date_format:Y-m-d H:i:s','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Amount','name'=>'tran_amount','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Source','name'=>'tran_source','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Source Name','name'=>'tran_source_name','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Source Address','name'=>'tran_source_address','type'=>'textarea','validation'=>'required|string|min:5|max:5000','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Receipt No','name'=>'receipt_no','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Purpose','name'=>'tran_purpose','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Purpose Other','name'=>'tran_purpose_other','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Deposited Same Day','name'=>'deposited_same_day','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Method','name'=>'tran_method','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Bank Deposited','name'=>'bank_deposited','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Is Own Bank','name'=>'is_own_bank','type'=>'radio','validation'=>'required|integer','width'=>'col-sm-10','dataenum'=>'Array'];
			//$this->form[] = ['label'=>'Tran Source Bank Name','name'=>'tran_source_bank_name','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Source Bank Branch','name'=>'tran_source_bank_branch','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Remarks','name'=>'tran_remarks','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Type','name'=>'tran_type','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Description','name'=>'tran_description','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Quantity','name'=>'tran_quantity','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Rate','name'=>'tran_rate','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Receiver Id','name'=>'tran_receiver_id','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'tran_receiver,id'];
			//$this->form[] = ['label'=>'Tran Receiver Name','name'=>'tran_receiver_name','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tran Receiver Address','name'=>'tran_receiver_address','type'=>'textarea','validation'=>'required|string|min:5|max:5000','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Tag Schedule','name'=>'tag_schedule','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Bank Consolidated','name'=>'bank_consolidated','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			# OLD END FORM

			/* 
	        | ---------------------------------------------------------------------- 
	        | Sub Module
	        | ----------------------------------------------------------------------     
			| @label          = Label of action 
			| @path           = Path of sub module
			| @foreign_key 	  = foreign key of sub table/module
			| @button_color   = Bootstrap Class (primary,success,warning,danger)
			| @button_icon    = Font Awesome Class  
			| @parent_columns = Sparate with comma, e.g : name,created_at
	        | 
	        */
	        $this->sub_module = array();


	        /* 
	        | ---------------------------------------------------------------------- 
	        | Add More Action Button / Menu
	        | ----------------------------------------------------------------------     
	        | @label       = Label of action 
	        | @url         = Target URL, you can use field alias. e.g : [id], [name], [title], etc
	        | @icon        = Font awesome class icon. e.g : fa fa-bars
	        | @color 	   = Default is primary. (primary, warning, succecss, info)     
	        | @showIf 	   = If condition when action show. Use field alias. e.g : [id] == 1
	        | 
	        */
	        $this->addaction = array();


	        /* 
	        | ---------------------------------------------------------------------- 
	        | Add More Button Selected
	        | ----------------------------------------------------------------------     
	        | @label       = Label of action 
	        | @icon 	   = Icon from fontawesome
	        | @name 	   = Name of button 
	        | Then about the action, you should code at actionButtonSelected method 
	        | 
	        */
	        $this->button_selected = array();

	                
	        /* 
	        | ---------------------------------------------------------------------- 
	        | Add alert message to this module at overheader
	        | ----------------------------------------------------------------------     
	        | @message = Text of message 
	        | @type    = warning,success,danger,info        
	        | 
	        */
	        $this->alert        = array();
	                

	        
	        /* 
	        | ---------------------------------------------------------------------- 
	        | Add more button to header button 
	        | ----------------------------------------------------------------------     
	        | @label = Name of button 
	        | @url   = URL Target
	        | @icon  = Icon from Awesome.
	        | 
	        */
	        $this->index_button = array();



	        /* 
	        | ---------------------------------------------------------------------- 
	        | Customize Table Row Color
	        | ----------------------------------------------------------------------     
	        | @condition = If condition. You may use field alias. E.g : [id] == 1
	        | @color = Default is none. You can use bootstrap success,info,warning,danger,primary.        
	        | 
	        */
	        $this->table_row_color = array();     	          

	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | You may use this bellow array to add statistic at dashboard 
	        | ---------------------------------------------------------------------- 
	        | @label, @count, @icon, @color 
	        |
	        */
	        $this->index_statistic = array();



	        /*
	        | ---------------------------------------------------------------------- 
	        | Add javascript at body 
	        | ---------------------------------------------------------------------- 
	        | javascript code in the variable 
	        | $this->script_js = "function() { ... }";
	        |
	        */
	        $this->script_js = NULL;


            /*
	        | ---------------------------------------------------------------------- 
	        | Include HTML Code before index table 
	        | ---------------------------------------------------------------------- 
	        | html code to display it before index table
	        | $this->pre_index_html = "<p>test</p>";
	        |
	        */
	        $this->pre_index_html = null;
	        
	        
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | Include HTML Code after index table 
	        | ---------------------------------------------------------------------- 
	        | html code to display it after index table
	        | $this->post_index_html = "<p>test</p>";
	        |
	        */
	        $this->post_index_html = null;
	        
	        
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | Include Javascript File 
	        | ---------------------------------------------------------------------- 
	        | URL of your javascript each array 
	        | $this->load_js[] = asset("myfile.js");
	        |
	        */
	        $this->load_js = array();
	        
	        
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | Add css style at body 
	        | ---------------------------------------------------------------------- 
	        | css code in the variable 
	        | $this->style_css = ".style{....}";
	        |
	        */
	        $this->style_css = NULL;
	        
	        
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | Include css File 
	        | ---------------------------------------------------------------------- 
	        | URL of your css each array 
	        | $this->load_css[] = asset("myfile.css");
	        |
	        */
	        $this->load_css = array();
	        
	        
	    }


	    /*
	    | ---------------------------------------------------------------------- 
	    | Hook for button selected
	    | ---------------------------------------------------------------------- 
	    | @id_selected = the id selected
	    | @button_name = the name of button
	    |
	    */
	    public function actionButtonSelected($id_selected,$button_name) {
	        //Your code here
	            
	    }

	    /*
	    | ---------------------------------------------------------------------- 
	    | Hook for manipulate query of index result 
	    | ---------------------------------------------------------------------- 
	    | @query = current sql query 
	    |
	    */
	    public function hook_query_index(&$query) {
	        //Your code here
	            
	    }

	    /*
	    | ---------------------------------------------------------------------- 
	    | Hook for manipulate row of index table html 
	    | ---------------------------------------------------------------------- 
	    |
	    */    
	    public function hook_row_index($column_index,&$column_value) {	        
	    	//Your code here
	    }

	    /*
	    | ---------------------------------------------------------------------- 
	    | Hook for manipulate data input before add data is execute
	    | ---------------------------------------------------------------------- 
	    | @arr
	    |
	    */
	    public function hook_before_add(&$postdata) {        
	        //Your code here

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for execute command after add public static function called 
	    | ---------------------------------------------------------------------- 
	    | @id = last insert id
	    | 
	    */
	    public function hook_after_add($id) {        
	        //Your code here

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for manipulate data input before update data is execute
	    | ---------------------------------------------------------------------- 
	    | @postdata = input post data 
	    | @id       = current id 
	    | 
	    */
	    public function hook_before_edit(&$postdata,$id) {        
	        //Your code here

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for execute command after edit public static function called
	    | ----------------------------------------------------------------------     
	    | @id       = current id 
	    | 
	    */
	    public function hook_after_edit($id) {
	        //Your code here 

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for execute command before delete public static function called
	    | ----------------------------------------------------------------------     
	    | @id       = current id 
	    | 
	    */
	    public function hook_before_delete($id) {
	        //Your code here

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for execute command after delete public static function called
	    | ----------------------------------------------------------------------     
	    | @id       = current id 
	    | 
	    */
	    public function hook_after_delete($id) {
	        //Your code here

		}
		
		public function getAllExpenses(Request $request){ 
			$data = [];
			$userdetails = getMyDetails('');
			$data['action_url'] = $request->url();
			$data['page_title'] = 'Expenses for General Party Propaganda';
			$data['icon_header'] = 'icon_b recordexpense_b';
			$data['ignore_chks'] = true;			
			$data['button_add'] = true;
			$data['button_add_url'] = 'admin/party_expense/expenses-add';
			$data['button_delete'] = true;
			$data['button_show'] = false;
			$data['button_filter'] = true;
			
			$resultObj = DB::table('party_transaction_register')
								->where('user_id',$userdetails->id)
								->where('election_id',$userdetails->election_id)
								->where('inkind',0)
								->where('is_petty',0)
								->where(function($query) {
							        $query->where('tran_source', '=', "Party")
							            ->orWhere('tran_source', '=', "Others");
								})
								->where('tag_schedule','!=','Null')
								->where('given_to','P')
								->where('tran_type','Dr');
			$resultObj = !empty($request->from_date) && !empty($request->from_date) ? $resultObj->whereBetween('tran_date',[$request->from_date,$request->to_date]) : $resultObj;
			$data['result'] = $resultObj->orderby('tran_date','desc')->paginate(config('app.pagination'));
			$data['from_date'] = !empty($request->from_date) ? $request->from_date : '';
			$data['to_date'] = !empty($request->to_date) ? $request->to_date : '';
			
			return view('party.hq_expense_list',$data);
		}

		public function getExpensesAdd(){

			$data['expense_types'] = DB::table('expensetypes_master')->where('status',1)->where('use_forType','HQ')->get();
			$data['states'] = DB::table('states')->where('status','A')->get();
			$data['script_files'] = 'js_files/party_general_expenses';
            return view('party.hq_expenses_add',$data);

		}

		public function postGeneralExpensesAdd(Request $request){

			$inputArr = $request->all(); 
			//echo "<pre>"; print_r($inputArr); die;
			$expense_type = $inputArr['expense_type'];

			$inputArr = Input::all(); 
			$user_id = CRUDBooster::myId(); 
			$mydetails = getMyDetails($user_id); 

			$data['user_id'] = $user_id;
			$data['privilege_id'] = CRUDBooster::myPrivilegeId();
			$data['election_id'] = $mydetails->election_id!=''?$mydetails->election_id:0;
			$data['party_id'] = $mydetails->party_id!=''?$mydetails->party_id:0;
			$data['state_id'] = $mydetails->state_id!=''?$mydetails->state_id:0;
			$data['trans_parent_id'] = 0;
			$data['tran_date'] = $inputArr['date'];
			$data['tran_amount'] = $inputArr['amount_paid'];
			$data['tran_source'] = 'Others';
			$data['tran_source_name'] = $mydetails->name;
			$data['tran_source_address'] = $mydetails->party_address;
			$data['tran_purpose'] = $inputArr['expense_type_text'];
			$data['tran_method'] = $inputArr['payment_type'];
			$data['tran_rate'] = $inputArr['amount'];
			$data['tran_type'] = 'Dr';
			$data['balance'] = getCurrentBalance('party_transaction_register')-$inputArr['amount'];
			$data['receipt_no'] = $inputArr['receipt_no'];
			$data['given_to'] = 'P';    // For Party

			if($expense_type == 1){	
				$data['tagged_parts'] = '53bi';
				$data['tag_schedule'] = '2';
			}

			if($expense_type == 2){	
				$data['tagged_parts'] = '53bii';
				$data['tag_schedule'] = '2';
			}

			if($expense_type == 3){	
				$data['tagged_parts'] = '53biii';
				$data['tag_schedule'] = '3';
			}

			if($expense_type == 4){	
				$data['tagged_parts'] = '53biv';
				$data['tag_schedule'] = '4';
			}

			if($expense_type == 5){	
				$data['tagged_parts'] = '53bv';
				$data['tag_schedule'] = '5';
			}

			if($expense_type == 6){	
				$data['tagged_parts'] = '53bvi';
				$data['tag_schedule'] = '6	';
			}

			if($party_transacion_id = DB::table('party_transaction_register')->insertGetId($data)){

				$dataSCH1['date'] = $inputArr['date'];
				$dataSCH1['cash'] = $inputArr['payment_type'];
				$dataSCH1['dd_or_cheque_no'] = $inputArr['receipt_no'];
				$dataSCH1['total_amount'] = $inputArr['amount_paid'];
				$dataSCH1['outstanding_amount'] = $inputArr['amount_outstanding'];
				$dataSCH1['party_transaction_register'] = $party_transacion_id;
				$dataSCH1['name'] = $mydetails->name;
				$dataSCH1['address'] = $mydetails->party_address;
				$dataSCH1['user_id'] = $mydetails->id;
				$dataSCH1['privilege_id'] = CRUDBooster::myPrivilegeId();
				$dataSCH1['party_id'] = $mydetails->party_id;
				$dataSCH1['election_id'] = $mydetails->election_id;
				$dataSCH1['state_id'] = $mydetails->state_id;
				$dataSCH1['state'] = getStateNameById($inputArr['state']);
				

				DB::table('party_schedule1')->insert($dataSCH1);

					if($expense_type == 1 || $expense_type == 2){

						$dataSCH2['date'] = $inputArr['date'];
						$dataSCH2['cash'] = $inputArr['payment_type'];
						$dataSCH2['venue'] = $inputArr['venue'];
						$dataSCH2['name_campaigner'] = $inputArr['name_campaigner'];
						$dataSCH2['travel_mode'] = ucfirst($inputArr['travel_mode']);
						$dataSCH2['operator_name'] = $inputArr['name_operator'];
						$dataSCH2['total_amount'] = $inputArr['amount_paid'];
						$dataSCH2['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH2['party_transaction_register'] = $party_transacion_id;
						$dataSCH2['name'] = $mydetails->name;
						$dataSCH2['address'] = $mydetails->party_address;
						$dataSCH2['user_id'] = $mydetails->id;
						$dataSCH2['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH2['party_id'] = $mydetails->party_id;
						$dataSCH2['election_id'] = $mydetails->election_id;
						$dataSCH2['state_id'] = $mydetails->state_id;
						$dataSCH2['state'] = getStateNameById($inputArr['state']);

						if($expense_type == 1) {
							$dataSCH2['is_star'] = 'Y';	
						}
						if($expense_type == 2){	
							$dataSCH2['is_star'] = 'N';
						}
						//pd($dataSCH2);
						DB::table('party_schedule2')->insert($dataSCH2);
						
					}

					if($expense_type == 3){	

						$dataSCH3['date'] = $inputArr['date'];
						$dataSCH3['cash'] = $inputArr['payment_type'];
						$dataSCH3['name_payee'] = $inputArr['name_payee'];
						$dataSCH3['name_media'] = $inputArr['name_media'];
						$dataSCH3['total_amount'] = $inputArr['amount_paid'];
						$dataSCH3['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH3['party_transaction_register'] = $party_transacion_id;
						$dataSCH3['name'] = $mydetails->name;
						$dataSCH3['address'] = $mydetails->party_address;
						$dataSCH3['user_id'] = $mydetails->id;
						$dataSCH3['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH3['party_id'] = $mydetails->party_id;
						$dataSCH3['election_id'] = $mydetails->election_id;
						$dataSCH3['state_id'] = $mydetails->state_id;
						$dataSCH3['state'] = getStateNameById($inputArr['state']);

						DB::table('party_schedule3')->insert($dataSCH3);
					}

					if($expense_type == 4){	

						$dataSCH4['date'] = $inputArr['date'];
						$dataSCH4['cash'] = $inputArr['payment_type'];
						$dataSCH4['constituency_name_no'] = $inputArr['constituency_name'];
						$dataSCH4['item_details'] = $inputArr['item_details4'];
						$dataSCH4['total_amount'] = $inputArr['amount_paid'];
						$dataSCH4['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH4['party_transaction_register'] = $party_transacion_id;
						$dataSCH4['name'] = $mydetails->name;
						$dataSCH4['address'] = $mydetails->party_address;
						$dataSCH4['user_id'] = $mydetails->id;
						$dataSCH4['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH4['party_id'] = $mydetails->party_id;
						$dataSCH4['election_id'] = $mydetails->election_id;
						$dataSCH4['state_id'] = $mydetails->state_id;
						$dataSCH4['state'] = getStateNameById($inputArr['state']);
						
						DB::table('party_schedule4')->insert($dataSCH4);
					}

					if($expense_type == 5){	
						
						$dataSCH5['date'] = $inputArr['date'];
						$dataSCH5['cash'] = $inputArr['payment_type'];
						$dataSCH5['venue'] = $inputArr['venue'];
						$dataSCH5['date_meeting'] = $inputArr['date_meeting'];
						$dataSCH5['item_details'] = $inputArr['item_details5'];
						$dataSCH5['total_amount'] = $inputArr['amount_paid'];
						$dataSCH5['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH5['party_transaction_register'] = $party_transacion_id;
						$dataSCH5['name'] = $mydetails->name;
						$dataSCH5['address'] = $mydetails->party_address;
						$dataSCH5['user_id'] = $mydetails->id;
						$dataSCH5['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH5['party_id'] = $mydetails->party_id;
						$dataSCH5['election_id'] = $mydetails->election_id;
						$dataSCH5['state_id'] = $mydetails->state_id;
						$dataSCH5['state'] = getStateNameById($inputArr['state']);

						DB::table('party_schedule5')->insert($dataSCH5);
					}

					if($expense_type == 6){	

						$dataSCH6['date'] = $inputArr['date'];
						$dataSCH6['cash'] = $inputArr['payment_type'];
						$dataSCH6['purpose'] = $inputArr['purpose'];
						$dataSCH6['item_details'] = $inputArr['item_details6'];
						$dataSCH6['total_amount'] = $inputArr['amount_paid'];
						$dataSCH6['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH6['party_transaction_register'] = $party_transacion_id;
						$dataSCH6['name'] = $mydetails->name;
						$dataSCH6['address'] = $mydetails->party_address;
						$dataSCH6['user_id'] = $mydetails->id;
						$dataSCH6['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH6['party_id'] = $mydetails->party_id;
						$dataSCH6['election_id'] = $mydetails->election_id;
						$dataSCH6['state_id'] = $mydetails->state_id;
						$dataSCH6['state'] = getStateNameById($inputArr['state']);
						
						DB::table('party_schedule6')->insert($dataSCH6);
					}
			}

			return redirect()->back()->with(['message'=> "Success. Record added successfully",'message_type'=>'success']);

		}

		public function getAllExpensesPsu(Request $request){
			
			$data = [];
			$userdetails = getMyDetails('');
			$data['action_url'] = $request->url();
			$data['page_title'] = 'Expenses for General Party Propaganda';
			$data['icon_header'] = 'icon_b recordexpense_b';
			$data['ignore_chks'] = true;			
			$data['button_add'] = true;
			$data['button_add_url'] = 'admin/party_expense/expenses-add-psu';
			$data['button_delete'] = true;
			$data['button_show'] = false;
			$data['button_filter'] = true;
			
			$resultObj = DB::table('party_transaction_register')
								->where('user_id',$userdetails->id)
								->where('election_id',$userdetails->election_id)
								->where('inkind',0)
								->where('is_petty',0)
								->where(function($query) {
							        $query->where('tran_source', '=', "Party")
							            ->orWhere('tran_source', '=', "Others");
								})
								->where('tag_schedule','!=','Null')
								->where('given_to','P')
								->where('tran_type','Dr');
			$resultObj = !empty($request->from_date) && !empty($request->from_date) ? $resultObj->whereBetween('tran_date',[$request->from_date,$request->to_date]) : $resultObj;
			$data['result'] = $resultObj->orderby('tran_date','desc')->paginate(config('app.pagination'));
			$data['from_date'] = !empty($request->from_date) ? $request->from_date : '';
			$data['to_date'] = !empty($request->to_date) ? $request->to_date : '';
			
			return view('party.psu_expense_list',$data);
		}

		public function getExpensesAddPsu(){

			$user_id = CRUDBooster::myId();
			$data['expense_types'] = DB::table('expensetypes_master')->where('status',1)->where('use_forType','SU')->get();
			$data['states'] = DB::table('user_states')->where('user_id',$user_id)->get();
			$data['script_files'] = 'js_files/party_general_expenses_psu';
			$data['icon_header'] = 'icon_b recordexpense_b';
            return view('party.psu_expenses_add',$data);

		}

		public function postGeneralExpensesAddPsu(Request $request){

			$inputArr = $request->all(); 
			//echo "<pre>"; print_r($inputArr); die;
			$expense_type = $inputArr['expense_type'];

			$inputArr = Input::all(); 
			$user_id = CRUDBooster::myId(); 
			$mydetails = getMyDetails($user_id); 

			$data['user_id'] = $user_id;
			$data['privilege_id'] = CRUDBooster::myPrivilegeId();
			$data['election_id'] = $mydetails->election_id!=''?$mydetails->election_id:0;
			$data['party_id'] = $mydetails->party_id!=''?$mydetails->party_id:0;
			$data['state_id'] = $inputArr['state'];
			$data['trans_parent_id'] = 0;
			$data['tran_date'] = $inputArr['date'];
			$data['tran_amount'] = $inputArr['amount_paid'];
			$data['tran_source'] = 'Others';
			$data['tran_source_name'] = $mydetails->name;
			$data['tran_source_address'] = $mydetails->party_address;
			$data['tran_purpose'] = $inputArr['expense_type_text'];
			$data['tran_method'] = $inputArr['payment_type'];
			$data['tran_rate'] = $inputArr['amount'];
			$data['tran_type'] = 'Dr';
			$data['balance'] = getCurrentBalance('party_transaction_register')-$inputArr['amount'];
			$data['receipt_no'] = $inputArr['receipt_no'];
			$data['given_to'] = 'P';

			if($expense_type == 7){	
				$data['tagged_parts'] = '63bi,63a';
				$data['tag_schedule'] = '12';
			}

			if($expense_type == 8){	
				$data['tagged_parts'] = '63bii,63a';
				$data['tag_schedule'] = '13';
			}

			if($expense_type == 9){	
				$data['tagged_parts'] = '63bii,63a';
				$data['tag_schedule'] = '14';
			}

			if($expense_type == 10){	
				$data['tagged_parts'] = '63bii,63a';
				$data['tag_schedule'] = '15';
			}

			if($expense_type == 11){	
				$data['tagged_parts'] = '63bii,63a';
				$data['tag_schedule'] = '16';
			}

			if($expense_type == 12){	
				$data['tagged_parts'] = '63bii,63a';
				$data['tag_schedule'] = '17';
			}

			if($party_transacion_id = DB::table('party_transaction_register')->insertGetId($data)){

					if($expense_type == 7 || $expense_type == 8){

						$dataSCH2['date'] = $inputArr['date'];
						$dataSCH2['cash'] = $inputArr['payment_type'];
						$dataSCH2['venue'] = $inputArr['venue'];
						$dataSCH2['name_campaigner'] = $inputArr['name_campaigner'];
						$dataSCH2['operator_name'] = $inputArr['name_operator'];
						$dataSCH2['total_amount'] = $inputArr['amount_paid'];
						$dataSCH2['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH2['party_transaction_register'] = $party_transacion_id;
						$dataSCH2['name'] = $mydetails->name;
						$dataSCH2['address'] = $mydetails->party_address;
						$dataSCH2['user_id'] = $mydetails->id;
						$dataSCH2['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH2['party_id'] = $mydetails->party_id;
						$dataSCH2['election_id'] = $mydetails->election_id;
						$dataSCH2['state_id'] = $inputArr['state'];
						$dataSCH2['state'] = getStateNameById($inputArr['state']);

						if($inputArr['travel_mode'] =='other'){
							$dataSCH2['travel_mode'] = $inputArr['travel_mode_other'];
						}
						else {
							$dataSCH2['travel_mode'] = ucfirst($inputArr['travel_mode']);
						}

						if($expense_type == 7) {
							$dataSCH2['is_star'] = 'Y';	
							DB::table('party_schedule12')->insert($dataSCH2);
						}
						if($expense_type == 8){	
							$dataSCH2['is_star'] = 'N';
							DB::table('party_schedule13')->insert($dataSCH2);
						}
						
						
					}

					if($expense_type == 9){	

						$dataSCH3['date'] = $inputArr['date'];
						$dataSCH3['cash'] = $inputArr['payment_type'];
						$dataSCH3['name_payee'] = $inputArr['name_payee'];
						$dataSCH3['name_media'] = $inputArr['name_media'];
						$dataSCH3['total_amount'] = $inputArr['amount_paid'];
						$dataSCH3['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH3['party_transaction_register'] = $party_transacion_id;
						$dataSCH3['name'] = $mydetails->name;
						$dataSCH3['address'] = $mydetails->party_address;
						$dataSCH3['user_id'] = $mydetails->id;
						$dataSCH3['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH3['party_id'] = $mydetails->party_id;
						$dataSCH3['election_id'] = $mydetails->election_id;
						$dataSCH3['state_id'] = $inputArr['state'];
						$dataSCH3['state'] = getStateNameById($inputArr['state']);

						DB::table('party_schedule14')->insert($dataSCH3);
					}

					if($expense_type == 10){	

						$dataSCH4['date'] = $inputArr['date'];
						$dataSCH4['cash'] = $inputArr['payment_type'];
						$dataSCH4['constituency_name_no'] = $inputArr['constituency_name'];
						$dataSCH4['item_details'] = $inputArr['item_details'];
						$dataSCH4['total_amount'] = $inputArr['amount_paid'];
						$dataSCH4['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH4['party_transaction_register'] = $party_transacion_id;
						$dataSCH4['name'] = $mydetails->name;
						$dataSCH4['address'] = $mydetails->party_address;
						$dataSCH4['user_id'] = $mydetails->id;
						$dataSCH4['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH4['party_id'] = $mydetails->party_id;
						$dataSCH4['election_id'] = $mydetails->election_id;
						$dataSCH4['state_id'] = $inputArr['state'];
						$dataSCH4['state'] = getStateNameById($inputArr['state']);
						
						DB::table('party_schedule15')->insert($dataSCH4);
					}

					if($expense_type == 11){	
						
						$dataSCH5['date'] = $inputArr['date'];
						$dataSCH5['cash'] = $inputArr['payment_type'];
						$dataSCH5['venue'] = $inputArr['venue'];
						$dataSCH5['date_meeting'] = $inputArr['date_meeting'];
						$dataSCH5['item_details'] = $inputArr['item_details'];
						$dataSCH5['total_amount'] = $inputArr['amount_paid'];
						$dataSCH5['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH5['party_transaction_register'] = $party_transacion_id;
						$dataSCH5['name'] = $mydetails->name;
						$dataSCH5['address'] = $mydetails->party_address;
						$dataSCH5['user_id'] = $mydetails->id;
						$dataSCH5['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH5['party_id'] = $mydetails->party_id;
						$dataSCH5['election_id'] = $mydetails->election_id;
						$dataSCH5['state_id'] = $inputArr['state'];
						$dataSCH5['state'] = getStateNameById($inputArr['state']);

						DB::table('party_schedule16')->insert($dataSCH5);
					}

					if($expense_type == 12){	

						$dataSCH6['date'] = $inputArr['date'];
						$dataSCH6['cash'] = $inputArr['payment_type'];
						$dataSCH6['purpose'] = $inputArr['purpose'];
						$dataSCH6['item_details'] = $inputArr['item_details'];
						$dataSCH6['total_amount'] = $inputArr['amount_paid'];
						$dataSCH6['outstanding_amount'] = $inputArr['amount_outstanding'];
						$dataSCH6['party_transaction_register'] = $party_transacion_id;
						$dataSCH6['name'] = $mydetails->name;
						$dataSCH6['address'] = $mydetails->party_address;
						$dataSCH6['user_id'] = $mydetails->id;
						$dataSCH6['privilege_id'] = CRUDBooster::myPrivilegeId();
						$dataSCH6['party_id'] = $mydetails->party_id;
						$dataSCH6['election_id'] = $mydetails->election_id;
						$dataSCH6['state_id'] = $inputArr['state'];
						$dataSCH6['state'] = getStateNameById($inputArr['state']);
						
						DB::table('party_schedule17')->insert($dataSCH6);
					}
			}

			return redirect('admin/party_expense/all-expenses-psu')->with(['message'=> "Success. Record added successfully",'message_type'=>'success']);

		}

		public function getAllExpensesCandidatesPsu(Request $request){

			$data = [];
			$userdetails = getMyDetails('');
			$data['action_url'] = $request->url();
			$data['page_title'] = 'Record Expenses-for Candidate(s) District level units';
			$data['icon_header'] = 'icon_b recordexpense_b';
			$data['ignore_chks'] = true;			
			$data['button_add'] = true;
			$data['button_add_url'] = 'admin/party_expense/expenses-add-candidate-psu';
			$data['button_delete'] = true;
			$data['button_show'] = false;
			$data['button_filter'] = true;
			
			$resultObj = DB::table('party_transaction_register')
								->where('user_id',$userdetails->id)
								->where('election_id',$userdetails->election_id)
								->where('given_to','C');
			$resultObj = !empty($request->from_date) && !empty($request->from_date) ? $resultObj->whereBetween('tran_date',[$request->from_date,$request->to_date]) : $resultObj;
			$data['result'] = $resultObj->orderby('tran_date','desc')->paginate(config('app.pagination'));
			$data['from_date'] = !empty($request->from_date) ? $request->from_date : '';
			$data['to_date'] = !empty($request->to_date) ? $request->to_date : '';
			
			return view('party.psu_candidate_expense_list',$data);
		}

		public function getAjaxForm($id) {
			$user_id = CRUDBooster::myId();
			$form_array = [
							6 => 'form_a',
							7 => 'form_b',
							8 => 'form_c',
							9 => 'form_d',
							10 => 'form_e'   
			              ];
			$data['states'] = DB::table('user_states')->where('user_id',$user_id)->get();              
			echo view('party.candidate-expense-psu.'.$form_array[$id],$data);              
		}

		public function getExpensesAddCandidatePsu(){

			$data['expense_types'] = DB::table('candidate_expensetypes_master')->where('use_forType','SU')->where('status',1)->get();
			$data['states'] = DB::table('states')->where('status','A')->get();
			$data['script_files'] = 'js_files/party_candidate_general_expenses_psu';
			$data['icon_header'] = 'icon_b recordexpense_b';
            return view('party.psu_candidate_expenses_add',$data);

		}
		
		public function postGeneralExpensesAddCandidatePsu(Request $request){

			$inputArr = $request->all();
			$expense_type = $inputArr['expense_type'];
			$user_id = CRUDBooster::myId(); 
			$mydetails = getMyDetails($user_id); 

			$fileNameUploaded = ''; 

			if ($request->hasFile('vouchar_filename')) { 
				$image = $request->file('vouchar_filename');
				$name = time().'.'.$image->getClientOriginalExtension();
				$destinationPath = public_path('/uploads');
				$fileNameUploaded =  "uploads/".  $name;
				$image->move($destinationPath, $name);
				}

			$data['user_id'] = $user_id;
			$data['privilege_id'] = CRUDBooster::myPrivilegeId();
			$data['election_id'] = $mydetails->election_id!=''?$mydetails->election_id:0;
			$data['party_id'] = $mydetails->party_id!=''?$mydetails->party_id:0;
			$data['state_id'] = $inputArr['candidate_state_id'];
			$data['trans_parent_id'] = 0;
			$data['tran_date'] = $inputArr['date'];
			$data['tran_source'] = 'Self';
			$data['tran_source_name'] = $mydetails->name;
			$data['tran_source_address'] = $mydetails->party_address;
			$data['tran_purpose'] = $expense_type; // type of expense id 
			$data['tran_method'] = 'Both';
			$data['tran_type'] = 'Dr';
			$data['given_to'] = 'C'; // for candidate
			$data['vouchar_filename'] = $fileNameUploaded;
			$data['vouchar_remarks'] = $inputArr['vouchar_remarks'];


			if(array_key_exists('candidates_name',$inputArr)){
				$data['tran_receiver_name'] = $inputArr['candidates_name'];
			}
			else {
				$data['tran_receiver_name'] = $inputArr['name'];
			}

			if(array_key_exists('amount_cash',$inputArr) && array_key_exists('amount_noncash',$inputArr)){
				$data['tran_amount'] = $inputArr['amount_cash']+$inputArr['amount_noncash'];
				$data['tran_rate'] = $inputArr['amount_cash']+$inputArr['amount_noncash'];
				$data['balance'] = getCurrentBalance('party_transaction_register')-$inputArr['amount']-$inputArr['amount_noncash'];
				$data['tran_amount_brkup_cash'] = $inputArr['amount_cash'];
				$data['tran_amount_brkup_noncash'] = $inputArr['amount_noncash'];
			}
			else {
				$data['tran_amount'] = $inputArr['amount_paid'];
				$data['tran_rate'] = $inputArr['amount_paid'];
				$data['balance'] = getCurrentBalance('party_transaction_register')-$inputArr['amount_paid'];
			}
			
			//pd($data);
			if ($expense_type == 6){	
				$data['tagged_parts'] = '64i';
				$data['tag_schedule'] = '18';
			} else if ($expense_type == 7) {
				$data['tagged_parts'] = '64ii';
				$data['tag_schedule'] = '19';
			} else if ($expense_type == 8) {
				$data['tagged_parts'] = '64iii';
				$data['tag_schedule'] = '20';
			} else if ($expense_type == 9) {
				$data['tagged_parts'] = '64iv';
				$data['tag_schedule'] = '21';
			} else if ($expense_type == 10) {
				$data['tagged_parts'] = '64v';
				$data['tag_schedule'] = '22';
			}

			
			if($party_transacion_id = DB::table('party_transaction_register')->insertGetId($data)){

					$dataSCH1['candidate_state_id'] = $inputArr['candidate_state_id'];	
					$dataSCH1['user_id'] = $user_id;
					$dataSCH1['privilege_id'] = $data['privilege_id'];
					$dataSCH1['party_id'] = $mydetails->party_id;
					$dataSCH1['election_id'] = $mydetails->election_id;
					$dataSCH1['state_id'] = $inputArr['candidate_state_id'];
					$dataSCH1['state'] = getStateNameById($inputArr['candidate_state_id']);
					$dataSCH1['date'] = $inputArr['date'];
					$dataSCH1['party_transaction_register_id'] = $party_transacion_id;

				if($expense_type == 6){	
					$dataSCH1['name'] = $inputArr['name'];
					$dataSCH1['party_name'] = $inputArr['party_name'];
					$dataSCH1['no_name_constituency'] = $inputArr['no_name_constituency'];
					$dataSCH1['amount_cash'] = $inputArr['amount_cash'];
					$dataSCH1['amount_noncash'] = $inputArr['amount_noncash'];
					$dataSCH1['date_of_instruction'] = $inputArr['receipt_date'];
					$dataSCH1['dd_or_cheque_no'] = $inputArr['receipt_no'];
					DB::table('party_schedule18')->insert($dataSCH1);
				} else if ($expense_type == 7) {
					$dataSCH1['name'] = $inputArr['name'];
					$dataSCH1['name_of_media'] = $inputArr['name_of_media'];
					$dataSCH1['other_details'] = $inputArr['other_details'];
					$dataSCH1['amount_paid'] = $inputArr['amount_paid'];
					$dataSCH1['amount_outstanding'] = $inputArr['amount_outstanding'];
					DB::table('party_schedule19')->insert($dataSCH1);
				} else if ($expense_type == 8) {
					$dataSCH1['name'] = $inputArr['name'];
					$dataSCH1['no_name_constituency'] = $inputArr['no_name_constituency'];
					$dataSCH1['details_of_items'] = $inputArr['details_of_items'];
					$dataSCH1['amount_paid'] = $inputArr['amount_paid'];
					$dataSCH1['amount_outstanding'] = $inputArr['amount_outstanding'];
					DB::table('party_schedule20')->insert($dataSCH1);
				} else if ($expense_type == 9) {
					$dataSCH1['name'] = $inputArr['candidates_name'];
					$dataSCH1['name_of_star_campaigner'] = $inputArr['name_of_star_campaigner'];
					$dataSCH1['candidates_name'] = $inputArr['candidates_name'];
					$dataSCH1['details_of_items'] = $inputArr['details_of_items'];
					$dataSCH1['amount_paid'] = $inputArr['amount_paid'];
					$dataSCH1['amount_outstanding'] = $inputArr['amount_outstanding'];
					DB::table('party_schedule21')->insert($dataSCH1);
				} else if ($expense_type == 10) {
					$dataSCH1['name'] = $inputArr['name'];
					$dataSCH1['no_name_constituency'] = $inputArr['no_name_constituency'];
					$dataSCH1['details_of_items'] = $inputArr['details_of_items'];
					$dataSCH1['amount_paid'] = $inputArr['amount_paid'];
					$dataSCH1['amount_outstanding'] = $inputArr['amount_outstanding'];
					DB::table('party_schedule22')->insert($dataSCH1);
				}

			}
			return redirect('admin/party_expense/all-expenses-candidates-psu')->with(['message'=> "Success. Record added successfully",'message_type'=>'success']);	;

		}

		public function postLumpSumAmountAddSave(Request $request){
			$inputArr = $request->all();
			$user_id = CRUDBooster::myId(); 
			$mydetails = getMyDetails($user_id); 

			$data['user_id'] = $user_id;
			$data['privilege_id'] = CRUDBooster::myPrivilegeId();
			$data['election_id'] = $mydetails->election_id!=''?$mydetails->election_id:0;
			$data['party_id'] = $mydetails->party_id!=''?$mydetails->party_id:0;
			$data['state_id'] = $inputArr['state_id'];
			$data['trans_parent_id'] = 0;
			$data['tran_date'] = $inputArr['date'];
			$data['tran_amount'] = $inputArr['amount'];
			$data['tran_source'] = 'Self';
			$data['tran_source_name'] = $mydetails->name;
			$data['tran_source_address'] = $mydetails->party_address;
			$data['tran_purpose'] = 'Record Lump Sum amount given to State Unit(s)';
			$data['tran_method'] = !empty($inputArr['payment_other'])?$inputArr['payment_other']:$inputArr['payment_mode'];
			$data['tran_receiver_name'] = $inputArr['tran_receiver_name'];
			$data['tran_rate'] = $inputArr['amount'];
			$data['receipt_no'] = $inputArr['receipt_no'];
			$data['tran_type'] = 'Dr';
			$data['given_to'] = 'U'; // for candidate
			$data['balance'] = getCurrentBalance('party_transaction_register')-$inputArr['amount'];
			$data['tagged_parts'] = 'B65';
			//pd($data);
			DB::table('party_transaction_register')->insertGetId($data);
			return redirect('admin/party_expense/lump-sum-amount-list')->with(['message'=> "Success. Record added successfully",'message_type'=>'success']);
		}

		public function getLumpSumAmountList(Request $request) {
			$data = [];
			$userdetails = getMyDetails('');
			$data['action_url'] = $request->url();
			$data['page_title'] = 'Record Lump Sum Amount given to State Unit';
			$data['ignore_chks'] = true;			
			$data['button_add'] = true;
			$data['button_add_url'] = 'admin/party_expense/lump-sum-amount-add';
			$data['button_delete'] = true;
			$data['button_show'] = false;
			$data['button_filter'] = true;
			
			$resultObj = DB::table('party_transaction_register')
								->where('user_id',$userdetails->id)
								->where('election_id',$userdetails->election_id)
								->where('given_to','U');
			$resultObj = !empty($request->from_date) && !empty($request->from_date) ? $resultObj->whereBetween('tran_date',[$request->from_date,$request->to_date]) : $resultObj;
			$data['result'] = $resultObj->orderby('tran_date','desc')->paginate(config('app.pagination'));
			$data['from_date'] = !empty($request->from_date) ? $request->from_date : '';
			$data['to_date'] = !empty($request->to_date) ? $request->to_date : '';
			
			return view('party.psu_record_lump_sum_list',$data);
		}
		
		public function getLumpSumAmountAdd(){
			$user_id = CRUDBooster::myId();		
			$data = [];		
			$data['mode_payment'] = [
										'Cash' => 'Cash',
										'Cheque' => 'Cheque',
										'DD' => 'DD',
										'PO' => 'PO',
										'RTGS' => 'RTGS',
										'Online Transfer' => 'Online Transfer',
										'Any Other' => 'Any Other'
									];
			$data['states'] = DB::table('user_states')->where('user_id',$user_id)->get();						
			$data['script_files'] = 'js_files/psu_record_lump_sum_add';						
            return view('party.psu_record_lump_sum_add',$data);
		}

		public function Annexuref2PartAData() {
			$data['candidate_details'] = getMyDetails('');
			//pd($data['candidate_details']);
			$user_id = $data['candidate_details']->id;

			$privilege_id = CRUDBooster::myPrivilegeId();
			$state_names = '';
			$data['applicable_flag'] = 1;
			if ($privilege_id == 5) {
				$data['applicable_flag'] = 0;
				return $data;
			}

			$data['bank_details'] = DB::table('user_bank_details')->where('user_id',$user_id)->where('status',1)->get(['bank_name','branch_name','balance']);
			$data['election_details']  = getElectionDates();
			$data['cash_in_hand']  = PartyTransactionRegister::where('inkind',0)->where('tran_method','cash')->where('tran_type','Cr')->filterPartyTransactionData()->get()->sum('tran_amount');
			$data['cheque_in_hand']  = PartyTransactionRegister::where('inkind',0)->where('tran_method','!=','cash')->where('tran_type','Cr')->filterPartyTransactionData()->get()->sum('tran_amount');
			//$data['in_kind']  = PartyTransactionRegister::where('inkind',1)->where('tran_type','Cr')->filterPartyTransactionData()->get()->sum('tran_amount');
			$data['in_kind']  = PartyTransactionRegister::where('inkind',1)->where('tran_type','Cr')->filterPartyTransactionData()->get(['tran_description','tran_amount']);
			$tranArr1 = PartySchedule1::filterOnlyPartyTransactionData()->with(['party_transaction_register' => function ($query) {
					      	$query->where('tran_type','Dr');
					      	//$query->where('tran_type','Dr');
					}])->get()->toArray();
			//pd($tranArr1);
			$tran_cash = 0;$tran_cheque = 0;$tran_inkind = 0;$outstanding_amount = 0;$total_amount2 = 0;
			foreach ($tranArr1 as $tA1) {
				if (!empty($tA1['party_transaction_register'])) {
					$tran_cash += ($tA1['party_transaction_register']['tran_method'] == 'cash' && $tA1['party_transaction_register']['inkind'] == 0 && $tA1['party_transaction_register']['given_to'] == 'P') ? $tA1['party_transaction_register']['tran_amount'] : 0;
					$tran_cheque += ($tA1['party_transaction_register']['tran_method'] != 'cash'  && $tA1['party_transaction_register']['inkind'] == 0 && $tA1['party_transaction_register']['given_to'] == 'P') ? $tA1['party_transaction_register']['tran_amount'] : 0;
					$tran_inkind += ($tA1['party_transaction_register']['inkind'] == 1 && $tA1['party_transaction_register']['given_to'] == 'P') ? $tA1['party_transaction_register']['tran_amount'] : 0;
					$outstanding_amount += $tA1['outstanding_amount'];
					//$total_amount2 += $tA1['total_amount'];
				}
			}
			$data['tran_cash'] = $tran_cash;
			$data['tran_cheque'] = $tran_cheque;
			$data['tran_inkind'] = $tran_inkind;
			$data['outstanding_amount'] = $outstanding_amount;
			$data['total_amount2'] = $tran_cash + $tran_cheque;
			
			$data['s2_total'] = PartySchedule2::filterOnlyPartyTransactionData()->where('is_star','Y')->get()->sum('total_amount');
			$data['s2a_total'] = PartySchedule2::filterOnlyPartyTransactionData()->where('is_star','N')->get()->sum('total_amount');
			$data['s3_total'] = PartySchedule3::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s4_total'] = PartySchedule4::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s5_total'] = PartySchedule5::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s6_total'] = PartySchedule6::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s7_total'] = PartySchedule7::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s8_total'] = PartySchedule8::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s9_total'] = PartySchedule9::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s10_total'] = PartySchedule10::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s11_total'] = PartySchedule11::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			
			$data['s2_total_out'] = PartySchedule2::filterOnlyPartyTransactionData()->where('is_star','Y')->get()->sum('outstanding_amount');
			$data['s2a_total_out'] = PartySchedule2::filterOnlyPartyTransactionData()->where('is_star','N')->get()->sum('outstanding_amount');
			$data['s3_total_out'] = PartySchedule3::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			$data['s4_total_out'] = PartySchedule4::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			$data['s5_total_out'] = PartySchedule5::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			$data['s6_total_out'] = PartySchedule6::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			$data['s7_total_out'] = PartySchedule7::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			$data['s8_total_out'] = PartySchedule8::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			$data['s9_total_out'] = PartySchedule9::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			$data['s10_total_out'] = PartySchedule10::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			$data['s11_total_out'] = PartySchedule11::filterOnlyPartyTransactionData()->get()->sum('outstanding_amount');
			

			$data['lump_sum_data'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','A55')->orderBy('tran_date','desc')->get();

			$cashIncome = PartyTransactionRegister::filterPartyTransactionData()->where('tran_method','cash')->where('tran_type','Cr')->get()->sum('tran_amount');
			$cashExpanseS2 = PartySchedule2::filterOnlyPartyTransactionData()->where('cash','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$cashExpanseS3 = PartySchedule3::filterOnlyPartyTransactionData()->where('cash','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$cashExpanseS4 = PartySchedule4::filterOnlyPartyTransactionData()->where('cash','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$cashExpanseS5 = PartySchedule5::filterOnlyPartyTransactionData()->where('cash','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$cashExpanseS6 = PartySchedule6::filterOnlyPartyTransactionData()->where('cash','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$cashExpanseS7 = PartySchedule7::filterOnlyPartyTransactionData()->where('payment_mode','cash')->get()->sum('total_amount');
			$cashExpanseS8 = PartySchedule8::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$cashExpanseS9 = PartySchedule9::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$cashExpanseS10 = PartySchedule10::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$cashExpanseS11 = PartySchedule11::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$cashExpanseLS = PartyTransactionRegister::filterPartyTransactionData()->where('tran_method','cash')->where('tran_type','Dr')->where('tagged_parts','a55')->get()->sum('tran_amount');
			//PartyTransactionRegister::filterPartyTransactionData()->where('tran_method','cash')->where('tran_type','Dr')->get()->sum('tran_amount');
			$totCashInhandLast = $data['candidate_details']->party_cash_in_hand + $cashIncome - ($cashExpanseS2 + $cashExpanseS3 + $cashExpanseS4 + $cashExpanseS5 + $cashExpanseS6 + $cashExpanseS7 + $cashExpanseS8 + $cashExpanseS9 + $cashExpanseS10 + $cashExpanseS11 + $cashExpanseLS); 

			$data['totCashInhandLast'] = $totCashInhandLast;

			$bnkBal = 0;
			if(sizeof($data['bank_details'])>0){
                  foreach($data['bank_details'] as $Val){                     
                     $bnkBal += $Val->balance;
                  }  
               }
            $chqExpanseS2 = PartySchedule2::filterOnlyPartyTransactionData()->where('cash','!=','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$chqExpanseS3 = PartySchedule3::filterOnlyPartyTransactionData()->where('cash','!=','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$chqExpanseS4 = PartySchedule4::filterOnlyPartyTransactionData()->where('cash','!=','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$chqExpanseS5 = PartySchedule5::filterOnlyPartyTransactionData()->where('cash','!=','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$chqExpanseS6 = PartySchedule6::filterOnlyPartyTransactionData()->where('cash','!=','cash')->value(DB::raw("SUM(total_amount + outstanding_amount)"));
			$chqExpanseS7 = PartySchedule7::filterOnlyPartyTransactionData()->where('payment_mode','!=','cash')->get()->sum('total_amount');
			$chqExpanseLS = PartyTransactionRegister::filterPartyTransactionData()->where('tran_method','!=','cash')->where('tran_type','Dr')->where('tagged_parts','a55')->get()->sum('tran_amount');

			$totBankBalLast = $bnkBal + $data['cheque_in_hand'] - ($chqExpanseS2 + $chqExpanseS3 + $chqExpanseS4 + $chqExpanseS5 + $chqExpanseS6 + $chqExpanseS7 + $chqExpanseLS);
			$data['totBankBalLast'] = $totBankBalLast;
			//pd($data['s4_total']);
		
			return $data;
		}

		public function getAnnexuref2PartA() {
			//die('abcd');
			$data = $this->Annexuref2PartAData();
			$data['layout_title'] = 'PART - A';
			$data['pdf_content'] = 'party_part_A';
			$data['pdf_link'] = url()->current().'-pdf';
			return view('party.party_schedule_layout',$data);
		}

		public function getAnnexuref2PartAPdf(Request $request) {
			$data = $this->Annexuref2PartAData();
			$pdf = PDF::loadView('party.pdf.party_part_A', $data);
			return $pdf->download('party_part_A.pdf');
		}
		
		public function Annexuref2PartBData() {
			$data['candidate_details'] = getMyDetails('');
			//pd($data['candidate_details']);
			$user_id = $data['candidate_details']->id;

			$privilege_id = CRUDBooster::myPrivilegeId();
			$state_names = '';
			$data['applicable_flag'] = 1;
			if ($privilege_id == 4) {
				$data['applicable_flag'] = 0;
				return $data;
			}

			$data['bank_details'] = DB::table('user_bank_details')->where('user_id',$user_id)->where('status',1)->get(['bank_name','branch_name','balance']);

			$data['cash_in_hand']  = PartyTransactionRegister::where('inkind',0)->where('tran_method','cash')->where('tran_type','Cr')->filterPartyTransactionData()->get()->sum('tran_amount');
			$data['cheque_in_hand']  = PartyTransactionRegister::where('inkind',0)->where('tran_method','!=','cash')->where('tran_type','Cr')->filterPartyTransactionData()->get()->sum('tran_amount');
			$data['in_kind']  = PartyTransactionRegister::where('inkind',1)->where('tran_type','Cr')->filterPartyTransactionData()->get()->sum('tran_amount');
			//pd($data['in_kind']);
			$data['tran_cash'] = PartyTransactionRegister::filterPartyTransactionData()->where('tran_method','cash')->where('inkind',0)->where('given_to','U')->get()->sum('tran_amount');
			$data['tran_cheque'] = PartyTransactionRegister::filterPartyTransactionData()->where('tran_method','<>','cash')->where('inkind',0)->where('given_to','U')->get()->sum('tran_amount');
		    $data['tran_inkind'] = PartyTransactionRegister::filterPartyTransactionData()->where('inkind',1)->where('given_to','U')->get()->sum('tran_amount');
			$data['s12_total'] = PartySchedule12::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s13_total'] = PartySchedule13::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s14_total'] = PartySchedule14::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s15_total'] = PartySchedule15::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s16_total'] = PartySchedule16::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s17_total'] = PartySchedule17::filterOnlyPartyTransactionData()->get()->sum('total_amount');
			$data['s18_total'] = PartySchedule18::filterOnlyPartyTransactionData()->get()->sum('amount_cash');
			$data['s19_total'] = PartySchedule19::filterOnlyPartyTransactionData()->get()->sum('amount_paid');
			$data['s20_total'] = PartySchedule20::filterOnlyPartyTransactionData()->get()->sum('amount_paid');
			$data['s21_total'] = PartySchedule21::filterOnlyPartyTransactionData()->get()->sum('amount_paid');
			$data['s22_total'] = PartySchedule22::filterOnlyPartyTransactionData()->get()->sum('amount_paid');
			$data['lump_sum_data'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','B65')->orderBy('tran_date','desc')->get();
			//pd($data);
			return $data;
		}

		public function getAnnexuref2PartB() {
			//die('abcd');
			$data = $this->Annexuref2PartBData();
			$data['layout_title'] = 'PART - B';
			$data['pdf_content'] = 'party_part_B';
			$data['pdf_link'] = url()->current().'-pdf';
			return view('party.party_schedule_layout',$data);
		}

		public function getAnnexuref2PartBPdf(Request $request) {
			$data = $this->Annexuref2PartBData();
			$pdf = PDF::loadView('party.pdf.party_part_B', $data);
			return $pdf->download('party_part_B.pdf');
		}

		public function Annexuref2PartCData() { 
			$data['candidate_details'] = getMyDetails('');
			$data['poll_dates'] = implode(",",pollDates());
			$privilege_id = CRUDBooster::myPrivilegeId();
			$state_names = '';
			if ($privilege_id == 4) {
				$state_names = $data['candidate_details']->state_name;
			} else if ($privilege_id == 5) {

				$states_array = UserStates::where('user_id',$data['candidate_details']->id)->pluck('state_name')->toArray();
				$state_names = !empty($states_array) ? implode(",",$states_array) : '';
			}
			$data['state_names'] = $state_names;
			//$data['cash_in_hand']  = PartyTransactionRegister::where('inkind',0)->where('tran_method','cash')->where('tran_type','Cr')->filterPartyTransactionData()->get()->sum('tran_amount');

			$data['total_51ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','51ai')->sum('tran_amount');
			$data['total_61ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','like','%63a%')->sum('tran_amount');

			//pd($data['total_61ai']);
			$data['total_51aii'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','51aii')->sum('tran_amount');
			$data['total_61aii'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','61aii')->sum('tran_amount');
			$data['total_52ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','52ai')->sum('tran_amount');
			$data['total_62ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','62ai')->sum('tran_amount');
			$data['total_52aii'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','52aii')->sum('tran_amount');
			$data['total_62aii'] = PartyTransactionRegister::filterPartyTransactionData()->where('tagged_parts','62aii')->sum('tran_amount');
			$data['total_53ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','53ai')->sum('tran_amount');
			$data['total_63ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','63ai')->sum('tran_amount');
			$data['total_53aii'] = PartyTransactionRegister::filterPartyTransactionData()->where('tran_method','<>','cash')->where('given_to','P')->where('tagged_parts','53aii')->sum('tran_amount');
			$data['total_63aii'] = PartyTransactionRegister::filterPartyTransactionData()->where('tran_method','<>','cash')->where('given_to','P')->where('tagged_parts','63aii')->sum('tran_amount');
			$data['total_54ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','54ai')->sum('tran_amount');
			$data['total_64ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','64ai')->sum('tran_amount');
			$data['total_54aii_inkind'] = PartyTransactionRegister::filterPartyTransactionData()->where('inkind',1)->where('given_to','P')->where('tagged_parts','54aii')->sum('tran_amount');
			$data['total_64aii_inkind'] = PartyTransactionRegister::filterPartyTransactionData()->where('inkind',1)->where('given_to','P')->where('tagged_parts','64aii')->sum('tran_amount');
			$data['total_54aiii'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','54ai')->sum('tran_amount');
			$data['total_64aiii'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','64aii')->sum('tran_amount');
			$data['total_54aiv'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','54aiv')->sum('tran_amount');
			$data['total_64aiv'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','64aiv')->sum('tran_amount');
			$data['total_54av'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','54aiv')->sum('tran_amount');
			$data['total_64av'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','64aiv')->sum('tran_amount');
			$data['total_56ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','56ai')->sum('tran_amount');
			$data['total_66ai'] = PartyTransactionRegister::filterPartyTransactionData()->where('given_to','P')->where('tagged_parts','66ai')->sum('tran_amount');
			return $data;
		}

		public function getAnnexuref2PartC() {
			$data = $this->Annexuref2PartCData();
			$data['layout_title'] = 'PART - C';
			$data['pdf_content'] = 'party_part_C';
			$data['pdf_link'] = url()->current().'-pdf';
			return view('party.party_schedule_layout',$data);
		}

		public function getAnnexuref2PartCPdf(Request $request) {
			$data = $this->Annexuref2PartCData();
			$pdf = PDF::loadView('party.pdf.party_part_C', $data);
			return $pdf->download('party_part_C.pdf');
		}

		public function Annexuref2PartDData() {
			$data['candidate_details'] = getMyDetails('');
			return $data;
		}

		public function getAnnexuref2PartD() {
			//die('abcd');
			$data = $this->Annexuref2PartAData();
			$data['layout_title'] = 'PART - D';
			$data['pdf_content'] = 'party_part_D';
			$data['pdf_link'] = url()->current().'-pdf';
			return view('party.party_schedule_layout',$data);
		}

		public function getAnnexuref2PartDPdf(Request $request) {
			$data = $this->Annexuref2PartAData();
			$pdf = PDF::loadView('party.pdf.party_part_D', $data);
			return $pdf->download('party_part_D.pdf');
		}

		public function getPartyTransactionRegisterDelete($id){

			DB::table('party_schedule1')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule2')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule3')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule4')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule5')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule6')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule7')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule8')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule9')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule10')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule11')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule12')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule13')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule14')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule15')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule16')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule17')->where('party_transaction_register',$id)->delete();
			DB::table('party_schedule18')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule19')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule20')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule21')->where('party_transaction_register_id',$id)->delete();
			DB::table('party_schedule22')->where('party_transaction_register_id',$id)->delete();
			
			DB::table('party_transaction_register')->where('id',$id)->delete();
			
			return redirect()->back()->with(['message'=> "Success. Record deleted successfully",'message_type'=>'success']);
		}
	}